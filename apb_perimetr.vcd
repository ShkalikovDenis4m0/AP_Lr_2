$date
	Wed Dec 13 22:32:44 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module apb_perimetr_tb $end
$var wire 1 ! PWRITE $end
$var wire 32 " PWDATA [31:0] $end
$var wire 1 # PSEL $end
$var wire 1 $ PREADY $end
$var wire 32 % PRDATA_MASTER [31:0] $end
$var wire 32 & PRDATA [31:0] $end
$var wire 1 ' PENABLE $end
$var wire 32 ( PADDR [31:0] $end
$var reg 32 ) PADDR_MASTER [31:0] $end
$var reg 1 * PCLK $end
$var reg 1 + PRESET $end
$var reg 32 , PWDATA_MASTER [31:0] $end
$var reg 1 - PWRITE_MASTER $end
$scope module apb_master_1 $end
$var wire 32 . PADDR_MASTER [31:0] $end
$var wire 1 * PCLK $end
$var wire 1 + PRESET $end
$var wire 32 / PWDATA_MASTER [31:0] $end
$var wire 1 - PWRITE_MASTER $end
$var wire 1 $ PREADY $end
$var wire 32 0 PRDATA [31:0] $end
$var reg 32 1 PADDR [31:0] $end
$var reg 1 ' PENABLE $end
$var reg 32 2 PRDATA_MASTER [31:0] $end
$var reg 1 # PSEL $end
$var reg 32 3 PWDATA [31:0] $end
$var reg 1 ! PWRITE $end
$scope function apb_read $end
$var reg 32 4 inp_addr [31:0] $end
$upscope $end
$scope function apb_write $end
$var reg 32 5 inp_addr [31:0] $end
$var reg 32 6 inp_data [31:0] $end
$upscope $end
$upscope $end
$scope module apb_perimetr_1 $end
$var wire 32 7 PADDR [31:0] $end
$var wire 1 * PCLK $end
$var wire 1 ' PENABLE $end
$var wire 1 # PSEL $end
$var wire 32 8 PWDATA [31:0] $end
$var wire 1 ! PWRITE $end
$var parameter 4 9 output_reg_ADDR $end
$var parameter 4 : storona_a_ADDR $end
$var parameter 4 ; storona_b_ADDR $end
$var reg 32 < PRDATA [31:0] $end
$var reg 1 $ PREADY $end
$var reg 32 = output_reg [31:0] $end
$var reg 32 > storona_a [31:0] $end
$var reg 32 ? storona_b [31:0] $end
$upscope $end
$upscope $end
$scope module apb_perimetr_tb $end
$scope module apb_master_1 $end
$scope function apb_read $end
$upscope $end
$scope function apb_write $end
$upscope $end
$upscope $end
$scope module apb_perimetr_1 $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 ;
b0 :
b1000 9
$end
#0
$dumpvars
b0 ?
b0 >
b0 =
b0 <
b0 8
b0 7
bx 6
bx 5
bx 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
0-
b0 ,
0+
0*
b0 )
b0 (
0'
b0 &
b0 %
0$
0#
b0 "
0!
$end
#200
1'
1!
b101 "
b101 3
b101 8
1#
b101 6
b0 5
b101 ,
b101 /
1-
1*
#400
0*
#600
b1010 =
1$
b101 >
1*
#800
0*
#1000
0$
0'
0#
b111 "
b111 3
b111 8
b100 (
b100 1
b100 7
b111 6
b100 5
b100 )
b100 .
b111 ,
b111 /
1*
#1200
0*
#1400
b11000 =
1$
b111 ?
1'
1#
1*
#1600
0*
#1800
0$
0'
0#
b1000 4
b1000 )
b1000 .
0-
1*
#2000
0*
#2200
b11000 %
b11000 2
1$
b11000 &
b11000 0
b11000 <
1'
1#
0!
b1000 (
b1000 1
b1000 7
1*
#2400
0*
#2600
0$
0'
0#
1!
b10010 "
b10010 3
b10010 8
b0 (
b0 1
b0 7
b10010 6
b0 5
b0 )
b0 .
b10010 ,
b10010 /
1-
1*
#2800
0*
#3000
b110010 =
1$
b10010 >
1'
1#
1*
#3200
0*
#3400
0$
0'
0#
b1000 )
b1000 .
0-
1*
#3600
0*
#3800
b110010 %
b110010 2
1$
b110010 &
b110010 0
b110010 <
1'
1#
0!
b1000 (
b1000 1
b1000 7
1*
#4000
0*
#4200
0$
0'
0#
1!
b100000 "
b100000 3
b100000 8
b100 (
b100 1
b100 7
b100000 6
b100 5
b100 )
b100 .
b100000 ,
b100000 /
1-
1*
#4400
0*
#4600
b1100100 =
1$
b100000 ?
1'
1#
1*
#4800
0*
#5000
0$
0'
0#
b1000 )
b1000 .
0-
1*
#5200
0*
#5400
b1100100 %
b1100100 2
1$
b1100100 &
b1100100 0
b1100100 <
1'
1#
0!
b1000 (
b1000 1
b1000 7
1*
#5600
0*
#5800
0$
0'
0#
1!
b0 "
b0 3
b0 8
b0 (
b0 1
b0 7
b0 6
b0 5
b0 )
b0 .
b0 ,
b0 /
1-
1*
#6000
0*
#6200
b1000000 =
1$
b0 >
1'
1#
1*
#6400
0*
#6600
0$
0'
0#
b100 (
b100 1
b100 7
b100 5
b100 )
b100 .
1*
#6800
0*
#7000
b0 =
1$
b0 ?
1'
1#
1*
#7200
0*
#7400
0$
0'
0#
b1000 )
b1000 .
0-
1*
#7600
0*
#7800
b0 %
b0 2
1$
b0 &
b0 0
b0 <
1'
1#
0!
b1000 (
b1000 1
b1000 7
1*
#8000
0*
#8200
0$
0'
0#
1*
#8400
0*
#8600
1$
1'
1#
1*
#8700
